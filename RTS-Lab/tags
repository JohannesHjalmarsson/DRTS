__STM32F4xx_DAC_H	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define __STM32F4xx_DAC_H$/;"	macro	line:31
DAC_Trigger	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^  uint32_t DAC_Trigger;                      \/*!< Specifies the external trigger for the selected DAC channel.$/;"	member	line:56	struct:__anon100	access:public
DAC_WaveGeneration	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^  uint32_t DAC_WaveGeneration;               \/*!< Specifies whether DAC channel noise waves or triangle waves$/;"	member	line:59	struct:__anon100	access:public
DAC_LFSRUnmask_TriangleAmplitude	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^  uint32_t DAC_LFSRUnmask_TriangleAmplitude; \/*!< Specifies the LFSR mask for noise wave generation or$/;"	member	line:63	struct:__anon100	access:public
DAC_OutputBuffer	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^  uint32_t DAC_OutputBuffer;                 \/*!< Specifies whether the DAC channel output buffer is enabled or disabled.$/;"	member	line:67	struct:__anon100	access:public
DAC_InitTypeDef	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^typedef struct {   uint32_t DAC_Trigger;                      \/*!< Specifies the external trigger for the selected DAC channel.                                                   This parameter can be a value of @ref DAC_trigger_selection *\/    uint32_t DAC_WaveGeneration;               \/*!< Specifies whether DAC channel noise waves or triangle waves                                                   are generated, or whether no wave is generated.                                                   This parameter can be a value of @ref DAC_wave_generation *\/    uint32_t DAC_LFSRUnmask_TriangleAmplitude; \/*!< Specifies the LFSR mask for noise wave generation or                                                   the maximum amplitude triangle generation for the DAC channel.                                                    This parameter can be a value of @ref DAC_lfsrunmask_triangleamplitude *\/    uint32_t DAC_OutputBuffer;                 \/*!< Specifies whether the DAC channel output buffer is enabled or disabled.                                                   This parameter can be a value of @ref DAC_output_buffer *\/ }DAC_InitTypeDef; $/;"	typedef	line:69	typeref:struct:__anon100
DAC_Trigger_None	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Trigger_None                   ((uint32_t)0x00000000) \/*!< Conversion is automatic once the DAC1_DHRxxxx register $/;"	macro	line:81
DAC_Trigger_T2_TRGO	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Trigger_T2_TRGO                ((uint32_t)0x00000024) \/*!< TIM2 TRGO selected as external conversion trigger for DAC channel *\/$/;"	macro	line:83
DAC_Trigger_T4_TRGO	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Trigger_T4_TRGO                ((uint32_t)0x0000002C) \/*!< TIM4 TRGO selected as external conversion trigger for DAC channel *\/$/;"	macro	line:84
DAC_Trigger_T5_TRGO	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Trigger_T5_TRGO                ((uint32_t)0x0000001C) \/*!< TIM5 TRGO selected as external conversion trigger for DAC channel *\/$/;"	macro	line:85
DAC_Trigger_T6_TRGO	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Trigger_T6_TRGO                ((uint32_t)0x00000004) \/*!< TIM6 TRGO selected as external conversion trigger for DAC channel *\/$/;"	macro	line:86
DAC_Trigger_T7_TRGO	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Trigger_T7_TRGO                ((uint32_t)0x00000014) \/*!< TIM7 TRGO selected as external conversion trigger for DAC channel *\/$/;"	macro	line:87
DAC_Trigger_T8_TRGO	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Trigger_T8_TRGO                ((uint32_t)0x0000000C) \/*!< TIM8 TRGO selected as external conversion trigger for DAC channel *\/                                                                       $/;"	macro	line:88
DAC_Trigger_Ext_IT9	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Trigger_Ext_IT9                ((uint32_t)0x00000034) \/*!< EXTI Line9 event selected as external conversion trigger for DAC channel *\/$/;"	macro	line:90
DAC_Trigger_Software	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Trigger_Software               ((uint32_t)0x0000003C) \/*!< Conversion started by software trigger for DAC channel *\/$/;"	macro	line:91
IS_DAC_TRIGGER	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_TRIGGER(TRIGGER) (((TRIGGER) == DAC_Trigger_None) || \\$/;"	macro	line:93
DAC_WaveGeneration_None	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_WaveGeneration_None            ((uint32_t)0x00000000)$/;"	macro	line:111
DAC_WaveGeneration_Noise	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_WaveGeneration_Noise           ((uint32_t)0x00000040)$/;"	macro	line:112
DAC_WaveGeneration_Triangle	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_WaveGeneration_Triangle        ((uint32_t)0x00000080)$/;"	macro	line:113
IS_DAC_GENERATE_WAVE	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_GENERATE_WAVE(WAVE) (((WAVE) == DAC_WaveGeneration_None) || \\$/;"	macro	line:114
DAC_LFSRUnmask_Bit0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bit0                ((uint32_t)0x00000000) \/*!< Unmask DAC channel LFSR bit0 for noise wave generation *\/$/;"	macro	line:125
DAC_LFSRUnmask_Bits1_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits1_0             ((uint32_t)0x00000100) \/*!< Unmask DAC channel LFSR bit[1:0] for noise wave generation *\/$/;"	macro	line:126
DAC_LFSRUnmask_Bits2_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits2_0             ((uint32_t)0x00000200) \/*!< Unmask DAC channel LFSR bit[2:0] for noise wave generation *\/$/;"	macro	line:127
DAC_LFSRUnmask_Bits3_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits3_0             ((uint32_t)0x00000300) \/*!< Unmask DAC channel LFSR bit[3:0] for noise wave generation *\/$/;"	macro	line:128
DAC_LFSRUnmask_Bits4_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits4_0             ((uint32_t)0x00000400) \/*!< Unmask DAC channel LFSR bit[4:0] for noise wave generation *\/$/;"	macro	line:129
DAC_LFSRUnmask_Bits5_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits5_0             ((uint32_t)0x00000500) \/*!< Unmask DAC channel LFSR bit[5:0] for noise wave generation *\/$/;"	macro	line:130
DAC_LFSRUnmask_Bits6_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits6_0             ((uint32_t)0x00000600) \/*!< Unmask DAC channel LFSR bit[6:0] for noise wave generation *\/$/;"	macro	line:131
DAC_LFSRUnmask_Bits7_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits7_0             ((uint32_t)0x00000700) \/*!< Unmask DAC channel LFSR bit[7:0] for noise wave generation *\/$/;"	macro	line:132
DAC_LFSRUnmask_Bits8_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits8_0             ((uint32_t)0x00000800) \/*!< Unmask DAC channel LFSR bit[8:0] for noise wave generation *\/$/;"	macro	line:133
DAC_LFSRUnmask_Bits9_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits9_0             ((uint32_t)0x00000900) \/*!< Unmask DAC channel LFSR bit[9:0] for noise wave generation *\/$/;"	macro	line:134
DAC_LFSRUnmask_Bits10_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits10_0            ((uint32_t)0x00000A00) \/*!< Unmask DAC channel LFSR bit[10:0] for noise wave generation *\/$/;"	macro	line:135
DAC_LFSRUnmask_Bits11_0	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_LFSRUnmask_Bits11_0            ((uint32_t)0x00000B00) \/*!< Unmask DAC channel LFSR bit[11:0] for noise wave generation *\/$/;"	macro	line:136
DAC_TriangleAmplitude_1	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_1            ((uint32_t)0x00000000) \/*!< Select max triangle amplitude of 1 *\/$/;"	macro	line:137
DAC_TriangleAmplitude_3	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_3            ((uint32_t)0x00000100) \/*!< Select max triangle amplitude of 3 *\/$/;"	macro	line:138
DAC_TriangleAmplitude_7	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_7            ((uint32_t)0x00000200) \/*!< Select max triangle amplitude of 7 *\/$/;"	macro	line:139
DAC_TriangleAmplitude_15	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_15           ((uint32_t)0x00000300) \/*!< Select max triangle amplitude of 15 *\/$/;"	macro	line:140
DAC_TriangleAmplitude_31	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_31           ((uint32_t)0x00000400) \/*!< Select max triangle amplitude of 31 *\/$/;"	macro	line:141
DAC_TriangleAmplitude_63	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_63           ((uint32_t)0x00000500) \/*!< Select max triangle amplitude of 63 *\/$/;"	macro	line:142
DAC_TriangleAmplitude_127	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_127          ((uint32_t)0x00000600) \/*!< Select max triangle amplitude of 127 *\/$/;"	macro	line:143
DAC_TriangleAmplitude_255	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_255          ((uint32_t)0x00000700) \/*!< Select max triangle amplitude of 255 *\/$/;"	macro	line:144
DAC_TriangleAmplitude_511	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_511          ((uint32_t)0x00000800) \/*!< Select max triangle amplitude of 511 *\/$/;"	macro	line:145
DAC_TriangleAmplitude_1023	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_1023         ((uint32_t)0x00000900) \/*!< Select max triangle amplitude of 1023 *\/$/;"	macro	line:146
DAC_TriangleAmplitude_2047	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_2047         ((uint32_t)0x00000A00) \/*!< Select max triangle amplitude of 2047 *\/$/;"	macro	line:147
DAC_TriangleAmplitude_4095	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_TriangleAmplitude_4095         ((uint32_t)0x00000B00) \/*!< Select max triangle amplitude of 4095 *\/$/;"	macro	line:148
IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(VALUE) (((VALUE) == DAC_LFSRUnmask_Bit0) || \\$/;"	macro	line:150
DAC_OutputBuffer_Enable	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_OutputBuffer_Enable            ((uint32_t)0x00000000)$/;"	macro	line:182
DAC_OutputBuffer_Disable	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_OutputBuffer_Disable           ((uint32_t)0x00000002)$/;"	macro	line:183
IS_DAC_OUTPUT_BUFFER_STATE	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_OUTPUT_BUFFER_STATE(STATE) (((STATE) == DAC_OutputBuffer_Enable) || \\$/;"	macro	line:184
DAC_Channel_1	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Channel_1                      ((uint32_t)0x00000000)$/;"	macro	line:194
DAC_Channel_2	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Channel_2                      ((uint32_t)0x00000010)$/;"	macro	line:195
IS_DAC_CHANNEL	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_CHANNEL(CHANNEL) (((CHANNEL) == DAC_Channel_1) || \\$/;"	macro	line:196
DAC_Align_12b_R	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Align_12b_R                    ((uint32_t)0x00000000)$/;"	macro	line:206
DAC_Align_12b_L	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Align_12b_L                    ((uint32_t)0x00000004)$/;"	macro	line:207
DAC_Align_8b_R	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Align_8b_R                     ((uint32_t)0x00000008)$/;"	macro	line:208
IS_DAC_ALIGN	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_ALIGN(ALIGN) (((ALIGN) == DAC_Align_12b_R) || \\$/;"	macro	line:209
DAC_Wave_Noise	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Wave_Noise                     ((uint32_t)0x00000040)$/;"	macro	line:220
DAC_Wave_Triangle	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_Wave_Triangle                  ((uint32_t)0x00000080)$/;"	macro	line:221
IS_DAC_WAVE	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_WAVE(WAVE) (((WAVE) == DAC_Wave_Noise) || \\$/;"	macro	line:222
IS_DAC_DATA	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_DATA(DATA) ((DATA) <= 0xFFF0) $/;"	macro	line:232
DAC_IT_DMAUDR	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_IT_DMAUDR                      ((uint32_t)0x00002000)  $/;"	macro	line:240
IS_DAC_IT	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_IT(IT) (((IT) == DAC_IT_DMAUDR)) $/;"	macro	line:241
DAC_FLAG_DMAUDR	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define DAC_FLAG_DMAUDR                    ((uint32_t)0x00002000)  $/;"	macro	line:251
IS_DAC_FLAG	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^#define IS_DAC_FLAG(FLAG) (((FLAG) == DAC_FLAG_DMAUDR))  $/;"	macro	line:252
DAC_DeInit	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_DeInit(void);$/;"	prototype	line:266	signature:(void)	returns:void 
DAC_Init	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct);$/;"	prototype	line:269	signature:(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)	returns:void 
DAC_StructInit	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct);$/;"	prototype	line:270	signature:(DAC_InitTypeDef* DAC_InitStruct)	returns:void 
DAC_Cmd	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState);$/;"	prototype	line:271	signature:(uint32_t DAC_Channel, FunctionalState NewState)	returns:void 
DAC_SoftwareTriggerCmd	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState);$/;"	prototype	line:272	signature:(uint32_t DAC_Channel, FunctionalState NewState)	returns:void 
DAC_DualSoftwareTriggerCmd	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_DualSoftwareTriggerCmd(FunctionalState NewState);$/;"	prototype	line:273	signature:(FunctionalState NewState)	returns:void 
DAC_WaveGenerationCmd	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState);$/;"	prototype	line:274	signature:(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)	returns:void 
DAC_SetChannel1Data	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data);$/;"	prototype	line:275	signature:(uint32_t DAC_Align, uint16_t Data)	returns:void 
DAC_SetChannel2Data	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data);$/;"	prototype	line:276	signature:(uint32_t DAC_Align, uint16_t Data)	returns:void 
DAC_SetDualChannelData	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1);$/;"	prototype	line:277	signature:(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)	returns:void 
DAC_GetDataOutputValue	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel);$/;"	prototype	line:278	signature:(uint32_t DAC_Channel)	returns:uint16_t 
DAC_DMACmd	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState);$/;"	prototype	line:281	signature:(uint32_t DAC_Channel, FunctionalState NewState)	returns:void 
DAC_ITConfig	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState);$/;"	prototype	line:284	signature:(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)	returns:void 
DAC_GetFlagStatus	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG);$/;"	prototype	line:285	signature:(uint32_t DAC_Channel, uint32_t DAC_FLAG)	returns:FlagStatus 
DAC_ClearFlag	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG);$/;"	prototype	line:286	signature:(uint32_t DAC_Channel, uint32_t DAC_FLAG)	returns:void 
DAC_GetITStatus	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT);$/;"	prototype	line:287	signature:(uint32_t DAC_Channel, uint32_t DAC_IT)	returns:ITStatus 
DAC_ClearITPendingBit	C:\EDA223\RTS-Lab\driver\inc\stm32f4xx_dac.h	/^void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT);$/;"	prototype	line:288	signature:(uint32_t DAC_Channel, uint32_t DAC_IT)	returns:void 
